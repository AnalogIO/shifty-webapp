@using Shifty.App.Services
@inject IAuthenticationService _authenticationService

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    @if (_user is not null && (_user.IsInRole("Board") || _user.IsInRole("Manager")))
    {
        <MudNavLink Href="Voucher" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Sell">Issue vouchers</MudNavLink>
    }
    @if (_user is not null && _user.IsInRole("Board"))
    {
        <MudNavLink Href="Products" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Inventory">Product Management</MudNavLink>
        <MudNavLink Href="MenuItems" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Coffee">Menu Item Management</MudNavLink>
        <MudNavLink Href="Users" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ManageAccounts">Manage users</MudNavLink>
        <MudNavLink Href="Statistics" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Analytics">Statistics</MudNavLink>
        <MudNavLink Href="SwipeLog" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ManageAccounts">Swipe Log</MudNavLink>
    }
    <MudDivider />
    <MudNavLink OnClick="_authenticationService.Logout" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
</MudNavMenu>

@code
{
    [CascadingParameter] public Task<AuthenticationState> AuthTask { get; set; }
    private System.Security.Claims.ClaimsPrincipal _user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthTask;
        _user = authState.User;
    }
}
