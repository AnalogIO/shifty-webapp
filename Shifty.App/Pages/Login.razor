@page "/Login"
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using global::Shifty.Api.Generated.ShiftPlanningV1
@using Shifty.App.Services
@inject IAuthenticationService _authenticationService

<EditForm Model="@_loginForm" OnValidSubmit="async () =>  await LoginUser()" >
    <MudCard Class="mb-auto">
        <MudCardContent>
            @if (_loggingIn)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }
            else
            {
                if (!_successfulLogin)
                {
                    <MudAlert Severity="Severity.Warning" ShowCloseIcon="true">Invalid credentials</MudAlert>
                }
                
                <MudTextField T="string"
                              @bind-Value="_loginForm.Username"
                              Label="Email"
                              For="() => _loginForm.Username"
                              Immediate="true"
                              DebounceInterval="500"
                              Required="true"
                              RequiredError="Email is required!"
                              Validation="@(new EmailAddressAttribute() { ErrorMessage = "The e-mail address is invalid" })"/>
                <MudTextField T="string" Label="Password"
                              @bind-Value="_loginForm.Password"
                              InputType="InputType.Password"
                              For="() => _loginForm.Password"
                              Immediate="true"
                              RequiredError="Password is required!"/>
            }
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       Class="ml-auto"
                       OnClick="@(async () => await LoginUser())">
                Login
            </MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>


@code {
    bool _validInput;
    bool _loggingIn = false;
    bool _successfulLogin = true;
    LoginForm _loginForm = new();
    
    public class LoginForm
    {
        [Required]
        [EmailAddress]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    }

    async Task LoginUser()
    {
        _successfulLogin = true;
        _loggingIn = true;
        _successfulLogin = await _authenticationService.LoginUser(_loginForm.Username, _loginForm.Password);
        _loggingIn = false;
    }
}